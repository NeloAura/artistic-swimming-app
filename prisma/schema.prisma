generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
  
}

model Club {
  id           Int           @id @default(autoincrement())
  name         String?       @unique
  cellPhone    String?
  email        String?
  participants Participant[]
}

model Competition {
  id           Int           @id @default(autoincrement())
  name         String        @unique
  participants Participant[]
  users        User[]
  events       Event[]
}

model Event {
  id           Int           @id @default(autoincrement())
  competition   Competition   @relation(fields: [competitionId], references: [id] , onDelete: Cascade)
  competitionId Int
  name         String        
  division     String
  age_categorie String
  type         String
  startTime    String
  endTime      String
  participants Participant[]
  users        User[]
  groups       Groups[]
  scores       Score[]
  types        Type[]
}

model Participant {
  id              Int           @id @default(autoincrement())
  clublink        Club          @relation(fields: [clublinkId], references: [id], onDelete: Cascade)
  clublinkId      Int
  lastName        String?
  firstName       String?
  birthYear       DateTime?
  division        String?
  age_category    String?
  competition     String?
  event           String?
  country         String?
  generatedNumber Int?
  competitions    Competition[]
  events          Event[]
  groups          Groups[]
  scores          Score[]

  @@unique([id])
}

model Score {
  id                 Int    @id @default(autoincrement())
  eventlink          Event  @relation(fields: [eventlinkId], references: [id])
  eventlinkId        Int
  type               String
  value              Float
  users              User[]
  participants       Participant[]
  groups             Groups[]
}

model User {
  id             Int             @id @unique @default(autoincrement())
  name           String?         @unique
  username       String?         @unique
  password       String?
  role           String?
  competitions   Competition[]
  scores         Score[]
  configurations Configuration[]
  types          Type[]
  events         Event[]

  // TODO: Add a field for the current competition. This will be
}

model Type {
  id             Int             @id @unique @default(autoincrement())
  name           String?         @unique
  users          User[]
  events         Event[]
}

model Groups {
  id              Int           @id @default(autoincrement())
  groupName       String?
  generatedNumber Int?
  events          Event[]
  participants    Participant[]
  scores          Score[]
}

model Configuration {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  value  String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int
}
